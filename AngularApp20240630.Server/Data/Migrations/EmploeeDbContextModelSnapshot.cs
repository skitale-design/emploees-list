// <auto-generated />
using System;
using AngularApp20240630.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularApp20240630.Server.Data.Migrations
{
    [DbContext(typeof(EmploeeDbContext))]
    partial class EmploeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AngularApp20240630.Server.Data.Model.Emploee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Emploees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1980, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Отдел разработки",
                            FirstName = "Иван",
                            HireDate = new DateTime(2010, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Иванов",
                            MiddleName = "Иванович",
                            Salary = 100000.00m
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1990, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Отдел тестирования",
                            FirstName = "Алексей",
                            HireDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Трегубов",
                            MiddleName = "Петрович",
                            Salary = 80000.50m
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1980, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Отдел разработки",
                            FirstName = "Андрей",
                            HireDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Петренко",
                            MiddleName = "Юрьевич",
                            Salary = 200000.00m
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1986, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Отдел сопровождения",
                            FirstName = "Петр",
                            HireDate = new DateTime(2018, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Петров",
                            MiddleName = "Петрович",
                            Salary = 150400.17m
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1979, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Дирекция",
                            FirstName = "Сергей",
                            HireDate = new DateTime(2007, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Сергеев",
                            MiddleName = "Сергеевич",
                            Salary = 360000.00m
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1983, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Отдел кадров",
                            FirstName = "Анна",
                            HireDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Юровская",
                            MiddleName = "Алексеевна",
                            Salary = 170000.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
